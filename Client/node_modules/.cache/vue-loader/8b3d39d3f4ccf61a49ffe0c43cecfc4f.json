{"remainingRequest":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\src\\views\\Exercise.vue?vue&type=style&index=0&id=1826e812&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\src\\views\\Exercise.vue","mtime":1666171789535},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\css-loader\\dist\\cjs.js","mtime":1664724729002},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1664724727931},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\postcss-loader\\src\\index.js","mtime":1664724727946},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664724729110},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":1664724727679}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KaW5wdXQgew0KICBtYXJnaW4tYm90dG9tOiAyMHB4Ow0KfQ0Kc2VsZWN0IHsNCiAgbWFyZ2luLWJvdHRvbTogMjBweDsNCn0NCmJ1dHRvbiB7DQogIG1hcmdpbi10b3A6IDE1cHg7DQp9DQouY29udGFpbmVyIHsNCiAgbWFyZ2luLWJvdHRvbTogMzBweA0KfQ0KDQpAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSAgew0KICAjZXhlcmNpc2VCb3ggew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIHBhZGRpbmctYm90dG9tOiAyJTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["Exercise.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Exercise.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n    <div class=\"container\">\r\n      <b-jumbotron header=\"Exercise page\" lead=\"All about the exercise\"></b-jumbotron>\r\n        <div class=\"accordion\" role=\"tablist\" id=\"exerciseBox\">\r\n          <b-card no-body class=\"mb-1\">\r\n            <b-card-body>\r\n              <div id='exercise'>\r\n                   <h3>{{exerciseInfo.Name}}</h3>\r\n                  <p><strong>Difficulty Score: </strong>{{exerciseInfo.DifficultyScore}}</p>\r\n                  <p><strong>Tips and Tricks: </strong>{{exerciseInfo.TipsAndTricks}}</p>\r\n                  <b-button pill variant=outline-danger v-on:click=\"addToList()\"><b-icon icon=\"heart-fill\" aria-hidden=\"true\"></b-icon></b-button>\r\n              </div>\r\n            </b-card-body>\r\n          </b-card>\r\n          <b-card no-body class=\"mb-1\">\r\n            <b-card-header header-tag=\"header\" class=\"p-1\" role=\"tab\">\r\n              <b-button block v-b-toggle.accordion-3 variant=\"light\" v-on:click=\"showMuscle()\">See Connected Muscles <b-icon icon=\"caret-down-fill\" aria-hidden=\"true\"></b-icon></b-button>\r\n            </b-card-header>\r\n            <b-collapse id=\"accordion-3\" accordion=\"my-accordion\" role=\"tabpanel\">\r\n              <b-card-body>\r\n                <b-card-text>\r\n                  <div>\r\n                    <div v-for=\"muscle in completeMuscles\" v-bind:key=\"muscle._id\">\r\n                      <h4><strong>{{muscle.Name}} </strong></h4>\r\n                      <em>({{muscle.LatinName}})</em>\r\n                      <p>{{muscle.Description}}</p>\r\n                      <hr>\r\n                    </div>\r\n                  </div>\r\n                </b-card-text>\r\n              </b-card-body>\r\n            </b-collapse>\r\n          </b-card>\r\n          <b-card no-body class=\"mb-1\">\r\n            <b-card-header header-tag=\"header\" class=\"p-1\" role=\"tab\">\r\n              <b-button block v-b-toggle.accordion-4 variant=\"light\" v-on:click=\"showReview()\">Read Reviews <b-icon icon=\"caret-down-fill\" aria-hidden=\"true\"></b-icon></b-button>\r\n            </b-card-header>\r\n            <b-collapse id=\"accordion-4\" accordion=\"my-accordion\" role=\"tabpanel\">\r\n              <b-card-body>\r\n                <b-card-text>\r\n                  <div>\r\n                    <div v-for=\"review in completeReviews\" v-bind:key=\"review._id\">\r\n                      <h4><strong>{{review.Title}}</strong></h4>\r\n                      <p>(Rating: {{review.Rating}} of 5)</p>\r\n                      <p>{{review.MainText}}</p>\r\n                      <hr>\r\n                    </div>\r\n                  </div>\r\n                </b-card-text>\r\n              </b-card-body>\r\n            </b-collapse>\r\n          </b-card>\r\n          <b-card no-body class=\"mb-1\">\r\n            <b-card-header header-tag=\"header\" class=\"p-1\" role=\"tab\">\r\n              <b-button block v-b-toggle.accordion-5 variant=\"light\" >Leave a Review<b-icon icon=\"caret-down-fill\" aria-hidden=\"true\"></b-icon></b-button>\r\n            </b-card-header>\r\n            <b-collapse id=\"accordion-5\" accordion=\"my-accordion\" role=\"tabpanel\">\r\n              <b-card-body>\r\n                <b-card-text>\r\n                  <div>\r\n                    <form @submit.prevent=\"createReview\" method=\"POST\">\r\n                        <div>\r\n                          <p><strong>Title *</strong></p>\r\n                          <input type=\"text\" id=\"title\" v-model=\"review.Title\"> <br/>\r\n                        </div>\r\n                        <div>\r\n                          <p><strong>Description *</strong></p>\r\n                          <input type=\"text\" id=\"description\" v-model=\"review.MainText\"> <br/>\r\n                        </div>\r\n                        <div>\r\n                          <p><strong>Rating</strong></p>\r\n                          <select id=\"rating\" placeholder=\"Select rating (1-5) (optional)\" v-model=\"review.Rating\">\r\n                            <option value=\"1\">1 (Very bad)</option>\r\n                            <option value=\"2\">2 (Bad)</option>\r\n                            <option value=\"3\">3 (Moderate)</option>\r\n                            <option value=\"4\">4 (Good)</option>\r\n                            <option value=\"5\">5 (Very Good)</option>\r\n                          </select>\r\n                        </div>\r\n                        <em>* Necessary fields</em>\r\n                      </form>\r\n                      <b-button variant=\"primary\" v-on:click=\"createReview()\">Send</b-button>\r\n                  </div>\r\n                </b-card-text>\r\n              </b-card-body>\r\n            </b-collapse>\r\n          </b-card>\r\n        </div>\r\n      </div>\r\n</template>\r\n\r\n<script>\r\nimport { Api } from '@/Api'\r\n\r\nexport default {\r\n  name: 'exercise',\r\n  props: {\r\n    user: String\r\n  },\r\n  data() {\r\n    return {\r\n      exerciseInfo: {\r\n        Name: '',\r\n        _id: '',\r\n        DifficultyScore: 0,\r\n        Reviews: [],\r\n        Muscles: [],\r\n        TipsAndTricks: ''\r\n      },\r\n      review: {\r\n        Title: '',\r\n        Rating: null,\r\n        MainText: '',\r\n        Author: '',\r\n        Exercise: ''\r\n      },\r\n      reviewIds: [],\r\n      completeReviews: [],\r\n      reviewCount: 0,\r\n\r\n      muscleIds: [],\r\n      completeMuscles: [],\r\n      muscleCount: 0,\r\n      message: ''\r\n    }\r\n  },\r\n  mounted() {\r\n    const exerciseId = this.$route.params.id\r\n    Api.get(`/exercises/${exerciseId}`)\r\n      .then(response => {\r\n        this.exerciseInfo = response.data\r\n      })\r\n      .catch(error => {\r\n        console.error(error)\r\n        this.exerciseInfo = null\r\n        window.confirm('Could not load the exercise due to internal server error.')\r\n      })\r\n  },\r\n  methods: {\r\n    createReview() {\r\n      if (this.review.Title === '') {\r\n        this.$bvModal.msgBoxOk('Title field cannot be empty')\r\n      } else if (this.review.MainText === '') {\r\n        this.$bvModal.msgBoxOk('Description field cannot be empty')\r\n      } else {\r\n        const userId = this.user\r\n        const exerciseId = this.$route.params.id\r\n        Api.post(`users/${userId}/exercises/${exerciseId}/reviews`, this.review)\r\n          .then(response => {\r\n            console.log(response)\r\n            window.confirm('Review successfully created!')\r\n          })\r\n          .catch(error => {\r\n            console.log(error.response)\r\n            window.confirm('Creation failed due to internal server error')\r\n          })\r\n        window.location.reload()\r\n      }\r\n    },\r\n    showReview() {\r\n      try {\r\n        this.reviewCount += 1\r\n        if (this.reviewCount < 2) {\r\n          this.reviewIds = this.exerciseInfo.Reviews\r\n          this.reviewIds.forEach(this.fetchReviewData)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        window.confirm('Request failed due to internal server error.')\r\n      }\r\n    },\r\n    fetchReviewData(index) {\r\n      Api.get('/reviews/' + index)\r\n        .then(response => {\r\n          this.completeReviews.push(response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          window.confirm('Request failed due to internal server error.')\r\n        })\r\n    },\r\n    showMuscle() {\r\n      try {\r\n        this.muscleCount += 1\r\n        if (this.muscleCount < 2) {\r\n          this.muscleIds = this.exerciseInfo.Muscles\r\n          this.muscleIds.forEach(this.fetchMuscleData)\r\n        }\r\n      } catch (error) {\r\n        console.error(error)\r\n        window.confirm('Request failed due to internal server error.')\r\n      }\r\n    },\r\n    fetchMuscleData(index) {\r\n      Api.get('/muscles/' + index)\r\n        .then(response => {\r\n          this.completeMuscles.push(response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error.response.data)\r\n          window.confirm('Request failed due to internal server error.')\r\n        })\r\n    },\r\n    addToList() {\r\n      const exerciseId = this.$route.params.id\r\n      const userId = this.user\r\n      Api.post(`users/${userId}/exercises/${exerciseId}`, this.exercise)\r\n        .then(response => {\r\n          console.log(response)\r\n          window.confirm('Added to the list!')\r\n          window.location.reload()\r\n        })\r\n        .catch(error => {\r\n          if (error.response.status === 409) {\r\n            this.$bvModal.msgBoxOk('Already exist in the list!')\r\n          }\r\n          console.log(error.response)\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\ninput {\r\n  margin-bottom: 20px;\r\n}\r\nselect {\r\n  margin-bottom: 20px;\r\n}\r\nbutton {\r\n  margin-top: 15px;\r\n}\r\n.container {\r\n  margin-bottom: 30px\r\n}\r\n\r\n@media only screen and (max-width: 768px)  {\r\n  #exerciseBox {\r\n    width: 100%;\r\n    padding-bottom: 2%;\r\n  }\r\n}\r\n</style>\r\n"]}]}