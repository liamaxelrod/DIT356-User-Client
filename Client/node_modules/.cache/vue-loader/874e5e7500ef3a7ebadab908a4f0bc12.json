{"remainingRequest":"/Users/carlottahillger/Documents/University/Web Development/user-client/Client/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlottahillger/Documents/University/Web Development/user-client/Client/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/carlottahillger/Documents/University/Web Development/user-client/Client/src/App.vue","mtime":1671624602475},{"path":"/Users/carlottahillger/Documents/University/Web Development/user-client/Client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlottahillger/Documents/University/Web Development/user-client/Client/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIZWFkZXIgZnJvbSAnQC9jb21wb25lbnRzL0hlYWRlci52dWUnCmltcG9ydCBtcXR0IGZyb20gJ21xdHQnCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2hvbWUnLAogIGNvbXBvbmVudHM6IHsKICAgICdtZW51LWhlYWRlcic6IEhlYWRlcgogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNob3dDb25uZWN0aW9uSW5mb3JtYXRpb246IGZhbHNlLAogICAgICBtZXNzYWdlOiAnbm9uZScsCiAgICAgIGNvbm5lY3Rpb246IHsKICAgICAgICBwcm90b2NvbDogJ3dzcycsCiAgICAgICAgaG9zdDogJ2UzM2U0MWMyODlhZDRhYzY5YWU1ZWY2MGY0NTZlOWMzLnMyLmV1LmhpdmVtcS5jbG91ZCcsCiAgICAgICAgcG9ydDogODg4NCwKICAgICAgICBlbmRwb2ludDogJy9tcXR0JywKICAgICAgICBrZWVwYWxpdmU6IDYwLAogICAgICAgIGNsZWFuOiB0cnVlLAogICAgICAgIGNvbm5lY3RUaW1lb3V0OiA0MDAwLAogICAgICAgIHJlY29ubmVjdFBlcmlvZDogNDAwMCwKICAgICAgICBjbGllbnRJZDogYG1xdHRfJHtNYXRoLnJhbmRvbSgpLnRvU3RyaW5nKDE2KS5zbGljZSgzKX1gLAogICAgICAgIHVzZXJuYW1lOiAnZ3JvdXA2X2RlbnRpc3RpbW8nLAogICAgICAgIHBhc3N3b3JkOiAnZGVudGlzdGltbzEyMyEnCiAgICAgIH0sCiAgICAgIHN1YnNjcmlwdGlvbjogewogICAgICAgIHRvcGljOiAnZGVudGlzdGltby9ib29raW5nL3N1Y2Nlc2Z1bC1ib29raW5nJywKICAgICAgICBxb3M6IDAKICAgICAgfSwKICAgICAgcHVibGlzaDogewogICAgICAgIHRvcGljOiAnZGVudGlzdGltby9ib29raW5nL2NyZWF0ZS1ib29raW5nJywKICAgICAgICBxb3M6IDAsCiAgICAgICAgcGF5bG9hZDogJ3sidXNlcmlkIjogNjcyMywgInJlcXVlc3RpZCI6IDUwOTgxLCAiZGVudGlzdGlkIjogNDc3NjEyMzIxNzI2LCAiaXNzdWFuY2UiOiAxMDAwOTA5OTE5MSwgImRhdGUiOiAiMjQuMDYuMjMiLCAidGltZSI6ICIxMToxMiJ9JwogICAgICB9LAogICAgICByZWNlaXZlTmV3czoge30sCiAgICAgIHFvc0xpc3Q6IFswLCAxLCAyXSwKICAgICAgY2xpZW50OiB7CiAgICAgICAgY29ubmVjdGVkOiBmYWxzZQogICAgICB9LAogICAgICBzdWJzY3JpYmVTdWNjZXNzOiBmYWxzZSwKICAgICAgY29ubmVjdGluZzogZmFsc2UsCiAgICAgIHJldHJ5VGltZXM6IDAKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNyZWF0ZUNvbm5lY3Rpb24oKQogIH0sCiAgbWV0aG9kczogewogICAgaW5pdERhdGEoKSB7CiAgICAgIHRoaXMuY2xpZW50ID0gewogICAgICAgIGNvbm5lY3RlZDogZmFsc2UKICAgICAgfQogICAgICB0aGlzLnJldHJ5VGltZXMgPSAwCiAgICAgIHRoaXMuY29ubmVjdGluZyA9IGZhbHNlCiAgICAgIHRoaXMuc3Vic2NyaWJlU3VjY2VzcyA9IGZhbHNlCiAgICB9LAogICAgaGFuZGxlT25SZUNvbm5lY3QoKSB7CiAgICAgIHRoaXMucmV0cnlUaW1lcyArPSAxCiAgICAgIGlmICh0aGlzLnJldHJ5VGltZXMgPiA1KSB7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIHRoaXMuY2xpZW50LmVuZCgpCiAgICAgICAgICB0aGlzLmluaXREYXRhKCkKICAgICAgICAgIHRoaXMuJG1lc3NhZ2UuZXJyb3IoJ0Nvbm5lY3Rpb24gbWF4UmVjb25uZWN0VGltZXMgbGltaXQsIHN0b3AgcmV0cnknKQogICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7CiAgICAgICAgICAvLyB0aGlzLiRtZXNzYWdlLmVycm9yKGVycm9yLnRvU3RyaW5nKCkpCiAgICAgICAgICBjb25zb2xlLmxvZyhlcnJvcikKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVDb25uZWN0aW9uKCkgewogICAgICB0cnkgewogICAgICAgIHRoaXMuY29ubmVjdGluZyA9IHRydWUKICAgICAgICBjb25zdCB7IHByb3RvY29sLCBob3N0LCBwb3J0LCBlbmRwb2ludCwgLi4ub3B0aW9ucyB9ID0gdGhpcy5jb25uZWN0aW9uCiAgICAgICAgY29uc3QgY29ubmVjdFVybCA9IGAke3Byb3RvY29sfTovLyR7aG9zdH06JHtwb3J0fSR7ZW5kcG9pbnR9YAogICAgICAgIGNvbnNvbGUubG9nKGNvbm5lY3RVcmwpCiAgICAgICAgdGhpcy5jbGllbnQgPSBtcXR0LmNvbm5lY3QoY29ubmVjdFVybCwgb3B0aW9ucykKICAgICAgICBjb25zb2xlLmxvZyh0aGlzLmNsaWVudCkKICAgICAgICBpZiAodGhpcy5jbGllbnQub24pIHsKICAgICAgICAgIHRoaXMuY2xpZW50Lm9uKCdjb25uZWN0JywgKCkgPT4gewogICAgICAgICAgICB0aGlzLmNvbm5lY3RpbmcgPSBmYWxzZQogICAgICAgICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGlvbiBzdWNjZWVkZWQhJykKICAgICAgICAgIH0pCiAgICAgICAgICB0aGlzLmNsaWVudC5vbigncmVjb25uZWN0JywgdGhpcy5oYW5kbGVPblJlQ29ubmVjdCkKICAgICAgICAgIHRoaXMuY2xpZW50Lm9uKCdlcnJvcicsIChlcnJvcikgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZygnQ29ubmVjdGlvbiBmYWlsZWQnLCBlcnJvcikKICAgICAgICAgIH0pCiAgICAgICAgICB0aGlzLmNsaWVudC5vbignbWVzc2FnZScsICh0b3BpYywgbWVzc2FnZSkgPT4gewogICAgICAgICAgICBjb25zdCBqc29uU3RyaW5nID0gQnVmZmVyLmZyb20obWVzc2FnZSkudG9TdHJpbmcoJ3V0ZjgnKQogICAgICAgICAgICBjb25zdCBwYXJzZWREYXRhID0gSlNPTi5wYXJzZShqc29uU3RyaW5nKQogICAgICAgICAgICB0aGlzLnJlY2VpdmVOZXdzID0geyBtc2c6IHBhcnNlZERhdGEsIHRvcGljOiB0b3BpYyB9CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGBSZWNlaXZlZCBtZXNzYWdlICR7bWVzc2FnZX0gZnJvbSB0b3BpYyAke3RvcGljfWApCiAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICB0aGlzLmNvbm5lY3RpbmcgPSBmYWxzZQogICAgICAgIGNvbnNvbGUubG9nKCdtcXR0LmNvbm5lY3QgZXJyb3InLCBlcnJvcikKICAgICAgfQogICAgICBjb25zb2xlLmxvZygnaGVsbG8nKQogICAgICBjb25zb2xlLmxvZyh0aGlzLmNsaWVudCkKICAgIH0sCiAgICBkb1N1YnNjcmliZShzdWJUb3BpYykgewogICAgICBjb25zdCBxb3MgPSAyCiAgICAgIHRoaXMuY2xpZW50LnN1YnNjcmliZShzdWJUb3BpYywgeyBxb3MgfSwgKGVycm9yLCByZXMpID0+IHsKICAgICAgICBpZiAoZXJyb3IpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpYmUgdG8gdG9waWNzIGVycm9yJywgZXJyb3IpCiAgICAgICAgICByZXR1cm4KICAgICAgICB9CiAgICAgICAgdGhpcy5zdWJzY3JpYmVTdWNjZXNzID0gdHJ1ZQogICAgICAgIGNvbnNvbGUubG9nKCdTdWJzY3JpYmUgdG8gdG9waWNzIHJlcycsIHJlcykKICAgICAgfSkKICAgIH0sCiAgICBkb1VuU3Vic2NyaWJlKCkgewogICAgICBjb25zdCB7IHRvcGljIH0gPSB0aGlzLnN1YnNjcmlwdGlvbgogICAgICB0aGlzLmNsaWVudC51bnN1YnNjcmliZSh0b3BpYywgZXJyb3IgPT4gewogICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coJ1Vuc3Vic2NyaWJlIGVycm9yJywgZXJyb3IpCiAgICAgICAgfQogICAgICB9KQogICAgfSwKICAgIGRvUHVibGlzaCgpIHsKICAgICAgY29uc3QgeyB0b3BpYywgcW9zLCBwYXlsb2FkIH0gPSB0aGlzLnB1Ymxpc2gKICAgICAgdGhpcy5jbGllbnQucHVibGlzaCh0b3BpYywgcGF5bG9hZCwgeyBxb3MgfSwgZXJyb3IgPT4gewogICAgICAgIGlmIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coJ1B1Ymxpc2ggZXJyb3InLCBlcnJvcikKICAgICAgICB9CiAgICAgIH0pCiAgICB9LAogICAgZGVzdHJveUNvbm5lY3Rpb24oKSB7CiAgICAgIGlmICh0aGlzLmNsaWVudC5jb25uZWN0ZWQpIHsKICAgICAgICB0cnkgewogICAgICAgICAgdGhpcy5jbGllbnQuZW5kKGZhbHNlLCAoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuaW5pdERhdGEoKQogICAgICAgICAgICBjb25zb2xlLmxvZygnU3VjY2Vzc2Z1bGx5IGRpc2Nvbm5lY3RlZCEnKQogICAgICAgICAgfSkKICAgICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5sb2coJ0Rpc2Nvbm5lY3QgZmFpbGVkJywgZXJyb3IudG9TdHJpbmcoKSkKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <menu-header/>\n      <div>\n        <b-navbar toggleable=\"lg\" type=\"dark\">\n          <b-navbar-brand router-link class=\"nav-link\" to=\"/\">\n              <b-icon icon=\"house-door-fill\" aria-hidden=\"true\"></b-icon>\n            </b-navbar-brand>\n          <b-navbar-toggle target=\"nav-collapse\"></b-navbar-toggle>\n          <b-collapse id=\"nav-collapse\" is-nav>\n            <!-- Right aligned nav items -->\n            <b-navbar-nav class=\"ml-auto\">\n              <router-link class=\"nav-link\" to=\"/calendar\" >Calendar</router-link>\n                <router-link class=\"nav-link\" to=\"/search-appointment\" >Search Appointment</router-link>\n              <b-nav-item-dropdown right>\n                <!-- Using 'button-content' slot -->\n                <template #button-content>\n                  <b-icon icon=\"person-circle\" aria-hidden=\"true\"></b-icon>\n                </template>\n                <b-dropdown-item router-link class=\"nav-link\" to=\"/user\" v-bind:userId=\"this.user\">Profile</b-dropdown-item>\n                <b-dropdown-item router-link class=\"nav-link\" to=\"/login\" v-on:click=\"logOut()\">Sign Out</b-dropdown-item>\n              </b-nav-item-dropdown>\n            </b-navbar-nav>\n          </b-collapse>\n        </b-navbar>\n      </div>\n      <div class='col' v-if=\"(showConnectionInformation==true)\">\n        <div class=\"row\">\n          <span v-if=\"this.client.connected\">Connection successful!</span>\n        </div>\n        <div class=\"row\">\n          <button v-on:click=\"doSubscribe()\">Subscribe</button>\n          <button v-on:click=\"doUnSubscribe()\">Unsubscribe</button>\n        </div>\n        <div class=\"row\">\n          <span>Message we will send: {{ this.publish.payload }}</span>\n        </div>\n        <div class=\"row\">\n          <button v-on:click=\"doPublish()\">Publish</button>\n        </div>\n        <div class=\"row\">\n          <span>The response we get: {{ this.receiveNews }}</span>\n        </div>\n      </div>\n      <!-- Render the content of the current page view -->\n      <router-view v-bind:message=\"this.receiveNews\"/>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Header from '@/components/Header.vue'\nimport mqtt from 'mqtt'\n\nexport default {\n  name: 'home',\n  components: {\n    'menu-header': Header\n  },\n  data() {\n    return {\n      showConnectionInformation: false,\n      message: 'none',\n      connection: {\n        protocol: 'wss',\n        host: 'e33e41c289ad4ac69ae5ef60f456e9c3.s2.eu.hivemq.cloud',\n        port: 8884,\n        endpoint: '/mqtt',\n        keepalive: 60,\n        clean: true,\n        connectTimeout: 4000,\n        reconnectPeriod: 4000,\n        clientId: `mqtt_${Math.random().toString(16).slice(3)}`,\n        username: 'group6_dentistimo',\n        password: 'dentistimo123!'\n      },\n      subscription: {\n        topic: 'dentistimo/booking/succesful-booking',\n        qos: 0\n      },\n      publish: {\n        topic: 'dentistimo/booking/create-booking',\n        qos: 0,\n        payload: '{\"userid\": 6723, \"requestid\": 50981, \"dentistid\": 477612321726, \"issuance\": 10009099191, \"date\": \"24.06.23\", \"time\": \"11:12\"}'\n      },\n      receiveNews: {},\n      qosList: [0, 1, 2],\n      client: {\n        connected: false\n      },\n      subscribeSuccess: false,\n      connecting: false,\n      retryTimes: 0\n    }\n  },\n  mounted() {\n    this.createConnection()\n  },\n  methods: {\n    initData() {\n      this.client = {\n        connected: false\n      }\n      this.retryTimes = 0\n      this.connecting = false\n      this.subscribeSuccess = false\n    },\n    handleOnReConnect() {\n      this.retryTimes += 1\n      if (this.retryTimes > 5) {\n        try {\n          this.client.end()\n          this.initData()\n          this.$message.error('Connection maxReconnectTimes limit, stop retry')\n        } catch (error) {\n          // this.$message.error(error.toString())\n          console.log(error)\n        }\n      }\n    },\n    createConnection() {\n      try {\n        this.connecting = true\n        const { protocol, host, port, endpoint, ...options } = this.connection\n        const connectUrl = `${protocol}://${host}:${port}${endpoint}`\n        console.log(connectUrl)\n        this.client = mqtt.connect(connectUrl, options)\n        console.log(this.client)\n        if (this.client.on) {\n          this.client.on('connect', () => {\n            this.connecting = false\n            console.log('Connection succeeded!')\n          })\n          this.client.on('reconnect', this.handleOnReConnect)\n          this.client.on('error', (error) => {\n            console.log('Connection failed', error)\n          })\n          this.client.on('message', (topic, message) => {\n            const jsonString = Buffer.from(message).toString('utf8')\n            const parsedData = JSON.parse(jsonString)\n            this.receiveNews = { msg: parsedData, topic: topic }\n            console.log(`Received message ${message} from topic ${topic}`)\n          })\n        }\n      } catch (error) {\n        this.connecting = false\n        console.log('mqtt.connect error', error)\n      }\n      console.log('hello')\n      console.log(this.client)\n    },\n    doSubscribe(subTopic) {\n      const qos = 2\n      this.client.subscribe(subTopic, { qos }, (error, res) => {\n        if (error) {\n          console.log('Subscribe to topics error', error)\n          return\n        }\n        this.subscribeSuccess = true\n        console.log('Subscribe to topics res', res)\n      })\n    },\n    doUnSubscribe() {\n      const { topic } = this.subscription\n      this.client.unsubscribe(topic, error => {\n        if (error) {\n          console.log('Unsubscribe error', error)\n        }\n      })\n    },\n    doPublish() {\n      const { topic, qos, payload } = this.publish\n      this.client.publish(topic, payload, { qos }, error => {\n        if (error) {\n          console.log('Publish error', error)\n        }\n      })\n    },\n    destroyConnection() {\n      if (this.client.connected) {\n        try {\n          this.client.end(false, () => {\n            this.initData()\n            console.log('Successfully disconnected!')\n          })\n        } catch (error) {\n          console.log('Disconnect failed', error.toString())\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n#nav {\n  padding: 1rem 1.5rem;\n  background-color: #0092CA;\n}\n.nav-link{\n    font-size: 2rem;\n    font-weight: 500;\n    color: #ffffff;\n}\n.navbar {\n  font-style: bold;\n  background-color: #0092CA;\n  font-family: Arial, sans-serif;\n  font-weight: 400;\n}\n.navbar-nav {\n  margin-left: 30px;\n  margin-right: 30px;\n}\n\nb-icon {\n  min-width: 150%;\n  min-height: 150%;\n}\n</style>\n"]}]}