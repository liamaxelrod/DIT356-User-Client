{"remainingRequest":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\src\\components\\NewExercise.vue?vue&type=template&id=77ef2198&scoped=true&","dependencies":[{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\src\\components\\NewExercise.vue","mtime":1666171789532},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664724729110},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1664724727952},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1664724729110},{"path":"C:\\Users\\Juan\\Documents\\GitHub\\user-client\\Client\\node_modules\\vue-loader\\lib\\index.js","mtime":1664724727679}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}